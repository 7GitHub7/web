"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[921],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return y}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(r),y=n,b=u["".concat(c,".").concat(y)]||u[y]||m[y]||o;return r?a.createElement(b,p(p({ref:t},l),{},{components:r})):a.createElement(b,p({ref:t},l))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var s=2;s<o;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9930:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),p=["components"],i={sidebar_position:1},c="Comparable vs. Comparator",s={unversionedId:"Java/concepts/Comparable vs. Comparator",id:"Java/concepts/Comparable vs. Comparator",title:"Comparable vs. Comparator",description:"Wykorzystywane kiedy chcemy posortowa\u0107 obiekty.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/Java/concepts/Comparable vs. Comparator.md",sourceDirName:"Java/concepts",slug:"/Java/concepts/Comparable vs. Comparator",permalink:"/en/docs/Java/concepts/Comparable vs. Comparator",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Java/concepts/Comparable vs. Comparator.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"String",permalink:"/en/docs/Java/basic/String"},next:{title:"Equals and HashCode",permalink:"/en/docs/Java/concepts/Equals i hashCode"}},l={},m=[],u={toc:m};function y(e){var t=e.components,r=(0,n.Z)(e,p);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"comparable-vs-comparator"},"Comparable vs. Comparator"),(0,o.kt)("p",null,"Wykorzystywane kiedy chcemy posortowa\u0107 obiekty.\nComperable jest interfejsem kt\xf3ry jest wymagany aby okre\u015bli\u0107 w jaki spos\xf3b klasy mog\u0105 by\u0107 ze sob\u0105 por\xf3wnane.\nZawiera on metod\u0119 compareTo w kt\xf3rej okre\u015blamy po jakich atrybutach oraz w jaki spos\xf3b obiekty maj\u0105 by\u0107 ze sob\u0105 por\xf3wnane.\nW wyniku pr\xf3wnania zwracany jest int. Element mo\u017ce by\u0107 wi\u0119kszy 1, r\xf3wny 0 lub mniejszy -1."),(0,o.kt)("p",null,"Comparator mo\u017ce by\u0107 przekazany do metody sortuj\u0105cej jako parametr.\nImplementujemy go w osobnej klasie. Jako parametry przyjmuje obiekty klasy kt\xf3r\u0105 b\u0119dzie por\xf3wnywa\u0142."),(0,o.kt)("p",null,"Mo\u017cemy sortowa\u0107 listy, arrays"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Comperable"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Comparator"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"dostarcza metod\u0119 compareTo()"),(0,o.kt)("td",{parentName:"tr",align:"left"},"dostarcza metod\u0119 compare()")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"java.lang package"),(0,o.kt)("td",{parentName:"tr",align:"left"},"java.util package")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"musi by\u0107 w tej samej klasie"),(0,o.kt)("td",{parentName:"tr",align:"left"},"implementowane poza klas\u0105")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"klasa musi implementowa\u0107 interfejs Comperable"),(0,o.kt)("td",{parentName:"tr",align:"left"},"klasa nie musi implementowa\u0107 interfejsu")))))}y.isMDXComponent=!0}}]);